openapi: 3.0.1
info:
  title: Gestão de Contas
  description: Abra e gerencie contas de pagamento do seu cliente pessoa física ou jurídica.
  version: '1.0'
servers:
  - url: https://api-mtls.sandbox.bankly.com.br
paths:
  
  /accounts/{accountNumber}:
    get:
      tags:
        - Conta de pagamentos
      summary: Consulta de dados de uma conta de pagamentos
      description: |
        <div class="bkly-ref-description">
          <p>Consulte todos os dados de uma conta de pagamentos. Opcionalmente, você pode obter o saldo dessa conta.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span> 
          <span class="bkly-ref-scope-tag">scope: account.read</span>
        </div>  
      operationId: GetAccount
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/AccountNumber'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion'
        - $ref: '#/components/parameters/IncludeBalance'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
      responses:
        '200':
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              $ref: 'http://localhost:3320/commons/components#/components/headers/CorrelationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetailedResponse'
              examples:
                  accountBasicExample:
                      $ref: '#/components/examples/accountBasicExample'
                  accountDetailedExample:
                      $ref: '#/components/examples/accountDetailedExample'
        '400':
          $ref: 'http://localhost:3320/commons/components#/components/responses/400'
        '403':
          $ref: 'http://localhost:3320/commons/components#/components/responses/403'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/409'
        '422':
          $ref: 'http://localhost:3320/commons/components#/components/responses/422'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'
  
  /accounts/{accountNumber}/closure:
    patch:
      tags:
        - Conta de pagamentos
      summary: |
        Encerramento de conta
      description: |
        <div class="bkly-ref-description">
          <p>Solicite o encerramento da conta do cliente.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span> 
          <span class="bkly-ref-scope-tag">scope: account.close</span>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "É preciso realizar a exclusão de <b> todas as chaves Pix </b> de uma conta antes de solicitar o seu cancelamento."
        }
        [/block] 
      operationId: CancelCustomerRegistration
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/AccountNumber'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosureRequest'
      responses:
        '202':
          $ref: 'http://localhost:3320/commons/components#/components/responses/202'
        '400':
          $ref: 'http://localhost:3320/commons/components#/components/responses/400'
        '403':
          $ref: 'http://localhost:3320/commons/components#/components/responses/403'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/409'
        '422':
          $ref: 'http://localhost:3320/commons/components#/components/responses/422'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'
  
  /customers/{documentNumber}/accounts:
    get:
      tags:
        - Conta pessoa física
      summary: Consulta das contas de pagamento de um cliente
      description: |
        <div class="bkly-ref-description">
          <p>Retornaremos uma lista com todas as contas desse cliente, independentemente de seus respectivos status.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span> 
          <span class="bkly-ref-scope-tag">scope: account.read</span>
        </div>
      operationId: GetPersonalAccounts
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/CustomerDocument'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
      responses:
        '200':
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              $ref: 'http://localhost:3320/commons/components#/components/headers/CorrelationId'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBasicResponse'
              examples:
                  listOfAccounts:
                    $ref: '#/components/examples/listOfAccounts'
        '400':
          $ref: 'http://localhost:3320/commons/components#/components/responses/400'
        '403':
          $ref: 'http://localhost:3320/commons/components#/components/responses/403'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/409'
        '422':
          $ref: 'http://localhost:3320/commons/components#/components/responses/422'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'
    post:
      tags:
        - Conta pessoa física
      summary: Criação de conta de pagamentos pessoa física
      description: |
        <div class="bkly-ref-description">
          <p>Antes de criar uma conta de pagamento, é necessário ter o registro do titular (pessoa física) previamente aprovado.</p>
          <span class="bkly-ref-small-stable-tag">stable</span> 
          <span class="bkly-ref-scope-tag">scope: account.create</span>
        </div>
      operationId: CreatePersonalAccount
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/CustomerDocument'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '201':
          description: Recurso criado com sucesso.
          headers:
            x-bkly-correlation-id:
              $ref: 'http://localhost:3320/commons/components#/components/headers/CorrelationId'
            Location:
              $ref: 'http://localhost:3320/commons/components#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetailedResponse'
              examples:
                  accountDetailedExample:
                      $ref: '#/components/examples/accountDetailedExample'
        '400':
          $ref: 'http://localhost:3320/commons/components#/components/responses/400'
        '403':
          $ref: 'http://localhost:3320/commons/components#/components/responses/403'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/409'
        '422':
          $ref: 'http://localhost:3320/commons/components#/components/responses/422'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'
  
  /business/{documentNumber}/accounts:
    get:
      tags:
        - Conta pessoa jurídica
      summary: Consulta das contas de pagamento de uma empresa
      description: |
        <div class="bkly-ref-description">
          <p>Retornaremos uma lista com todas as contas dessa empresa, independentemente de seus respectivos status.</p>
          <span class="bkly-ref-small-stable-tag">stable</span> 
          <span class="bkly-ref-scope-tag">scope: account.read</span>
        </div>  
      operationId: GetBusinessAccounts
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/BusinessDocument'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
      responses:
        '200':
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              $ref: 'http://localhost:3320/commons/components#/components/headers/CorrelationId'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBasicResponse'
              examples:
                  listOfAccounts:
                    $ref: '#/components/examples/listOfAccounts'
        '400':
          $ref: 'http://localhost:3320/commons/components#/components/responses/400'
        '403':
          $ref: 'http://localhost:3320/commons/components#/components/responses/403'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/409'
        '422':
          $ref: 'http://localhost:3320/commons/components#/components/responses/422'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'
    post:
      tags:
        - Conta pessoa jurídica
      summary: Criação de conta de pagamentos para uma empresa
      description: |
        <div class="bkly-ref-description">
          <p>A empresa poderá ter até 5 contas de pagamento. Para isso, é necessário ter o registro do titular (pessoa jurídica) previamente aprovado.</p>
          <span class="bkly-ref-small-stable-tag">stable</span> 
          <span class="bkly-ref-scope-tag">scope: account.create</span>
        </div>  
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Considere o uso do header ```Idempotency-Key```, a fim de evitar criar contas indesejadas."
        }
        [/block] 
      operationId: CreateBusinessAccount
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/BusinessDocument'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/IdempotencyKey' 
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '201':
          description: Recurso criado com sucesso.
          headers:
            x-bkly-correlation-id:
              $ref: 'http://localhost:3320/commons/components#/components/headers/CorrelationId'
            Location:
              $ref: 'http://localhost:3320/commons/components#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetailedResponse'
              examples:
                  accountDetailedExample:
                      $ref: '#/components/examples/accountDetailedExample'
        '400':
          $ref: 'http://localhost:3320/commons/components#/components/responses/400'
        '403':
          $ref: 'http://localhost:3320/commons/components#/components/responses/403'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/409'
        '422':
          $ref: 'http://localhost:3320/commons/components#/components/responses/422'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'
   

  /accounts/{accountNumber}/pockets:
    post:
      tags:
        - Conta pocket
      summary: Criação de conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>Crie uma conta pocket, para que seja possível guardar dinheiro fora da conta de pagamento.</p> 
          <span class="bkly-ref-small-stable-tag">beta</span> 
          <span class="bkly-ref-scope-tag">pocket.create</span>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Para criar uma conta pocket, é necessário ter uma conta de pagamento ativa."
        }
        [/block]
      operationId: CreatePocketAsync
      parameters:
        - name: accountNumber
          in: path
          required: true
          description: Número da conta de pagamento com dígito, a partir da qual a pocket será criada.
          schema: {type: string, nullable: true}
        - name: idempotency-key
          in: header
          required: true
          description: Chave de Idempotência
          schema: {type: string, description: 'Informe um GUID v4'}
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      requestBody:
        content:
          application/json: 
            schema:
              $ref: "#/components/schemas/CreatePocketRequestRequest"
      responses:
        '202':
          description: Recurso criado com sucesso.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}, Location: {description: "Localização do recurso recém-criado ou em análise.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/CreatePocketResponse"}}}
        '400':
          description: Há algum problema com a sua requisição.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '422':
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        '500':
          description: Ocorreu algum erro inesperado no nosso servidor.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '503':
          $ref: "http://localhost:3320/commons/components#/components/responses/503"       
    get:
      tags:
      - Conta pocket
      summary: Consulta dos dados de todas as contas pockets
      description: |
        <div class="bkly-ref-description">
          <p>Obtenha uma lista com os dados de todas as contas pockets associadas a uma conta de pagamento. A busca permite filtrar pelo status e pelo tipo da conta pocket.</p> 
          <span class="bkly-ref-small-stable-tag">beta</span> 
          <span class="bkly-ref-scope-tag">pocket.read</span>
        </div>
      operationId: GetPocketsByAccountNumberAsync
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema: {type: string, description: "Número da conta de pagamento com dígito.", nullable: true}
        - name: pocketType
          in: query
          schema: {type: string, description: "Tipo da Pocket, exemplo: Pocket_BRL.", nullable: true}
        - name: status
          in: query
          schema:
            $ref: "#/components/schemas/Status"
        - name: size
          in: query
          schema: {type: integer, description: "Quantidade de itens a serem retornados por página.", format: int32}
        - name: page
          in: query
          schema: {type: integer, description: "Pagina a ser retornada.", format: int32}
        - name: branch
          in: query
          schema: {type: string, description: "Agência da conta de pagamento (o padrão é 0001).", nullable: true}
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - name: idempotency-key
          in: header
          description: Chave de Idempotência
          schema: {type: string, description: 'Informe um GUID v4'}
      responses:
        '200':
          description: "Recurso encontrado"
          headers: {x-bkly-correlation-id: {description: "Id correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/GetPocketByAccountNumberResponse"}}}
        '404':
          description: "Recurso não encontrado."
          headers: {x-bkly-correlation-id: {description: "Id correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '500':
          description: "Ocorreu algum erro inesperado no nosso servidor."
          headers: {x-bkly-correlation-id: {description: "Id correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '503':
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}:
    get:
      tags:
        - Conta pocket
      summary: Consulta dos dados de uma conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>Consulte os dados e, opcionalmente, obtenha o saldo de uma conta pocket específica.</p> 
          <span class="bkly-ref-small-stable-tag">beta</span> 
          <span class="bkly-ref-scope-tag">pocket.read</span>
        </div>
      operationId: GetPocketAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        '200':
          description: Recurso encontrado.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/GetPocketNumberResponse"}}}
        '404':
          description: Recurso não encontrado.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '500':
          description: Ocorreu algum erro inesperado no nosso servidor.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '503':
          $ref: "http://localhost:3320/commons/components#/components/responses/503"
  
  /pockets/{pocketNumber}/balances:
    get:
      tags:
        - Conta pocket
      summary: Consulta do saldo de uma conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>Consulte o saldo disponível, bloqueado, em processamento e o total de uma conta pocket.</p> 
          <span class="bkly-ref-small-stable-tag">beta</span> 
          <span class="bkly-ref-scope-tag">pocket.read</span>
        </div>
      operationId: GetPocketBalanceAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        '200':
          description: Recurso encontrado.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/GetPocketBalanceResponse"}}}
        '404':
          description: Recurso não encontrado.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '500':
          description: Ocorreu algum erro inesperado no nosso servidor.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '503':
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}/transactions/savings:
    post:
      tags:
        - Conta pocket
      summary: Depósito em uma conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>Deposite um valor da conta de pagamento para a conta pocket atrelada a ela.</p> 
          <span class="bkly-ref-small-stable-tag">beta</span> 
          <span class="bkly-ref-scope-tag">pocket.transaction.create</span>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Para que seja possível a transferência, é necessário ter uma conta de pagamento ativa."
        }
        [/block]
      operationId: CreateDepositTransactionAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - name: idempotency-key
          in: header
          required: true
          description: Chave de Idempotência
          schema: {type: string, description: 'Informe um GUID v4'}
      requestBody:
        content:
          application/json: 
            schema: 
              $ref: "#/components/schemas/PocketTransactionRequestRequest"
      responses:
        '202':
          description: A requisição foi aceita e está sendo processada.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}, Location: {description: 'Localização do recurso recém-criado ou em análise.', schema: {type: string}}}
        '400':
          description: Há algum problema com a sua requisição.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '404':
          description: Recurso não encontrado.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '422':
          description: "A requisição não pode ser processada, devido a uma regra de negócio."
          headers: {x-bkly-correlation-id: {description: "Id correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '500':
          description: Ocorreu algum erro inesperado no nosso servidor.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '503':
          $ref: "http://localhost:3320/commons/components#/components/responses/503"
  
  /pockets/{pocketNumber}/transactions/redeems:
    post:
      tags:
        - Conta pocket
      summary: Resgate de um valor da conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>Transfira um valor da conta pocket para a conta de pagamento ao qual ela está associada.</p> 
          <span class="bkly-ref-small-stable-tag">beta</span> 
          <span class="bkly-ref-scope-tag">pocket.transaction.create</span>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Para que seja possível a transferência, é necessário ter uma conta de pagamento ativa."
        }
        [/block]
      operationId: CreateWithdrawalTransactionAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - name: idempotency-key
          in: header
          description: Chave de Idempotência
          schema: {type: string, description: "Informe um GUID v4"}
      requestBody:
        content:
          application/json: {schema: {$ref: "#/components/schemas/PocketTransactionRequestRequest"}}
      responses:
        '202':
            description: A requisição foi aceita e está sendo processada.
            headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}, Location: {description: 'Localização do recurso recém-criado ou em análise.', schema: {type: string}}}
        '400':
          description: Há algum problema com a sua requisição.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '404':
          description: Recurso não encontrado.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '422':
          description: "A requisição não pode ser processada, devido a uma regra de negócio."
          headers: {x-bkly-correlation-id: {description: "Id correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '500':
          description: Ocorreu algum erro inesperado no nosso servidor.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '503':
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}/closure:
    patch:
      tags:
        - Conta pocket
      summary: Encerramento de uma conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>Encerre uma conta pocket.</p> 
          <span class="bkly-ref-small-stable-tag">beta</span> 
          <span class="bkly-ref-scope-tag">pocket.close</span>
        </div>
      operationId: ClosePocketAccountAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      requestBody:
        content:
          application/json: {schema: {$ref: "#/components/schemas/PocketAccountClosureRequestRequest"}}
      responses:
        '202':
          description: 'Recurso encontrado'
          headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}, Location: {description: 'Localização do recurso recém-criado ou em análise.', schema: {type: string}}}
        '404':
          description: Recurso não encontrado.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '422':
          description: "A requisição não pode ser processada, devido a uma regra de negócio."
          headers: {x-bkly-correlation-id: {description: "Id correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '500':
          description: Ocorreu algum erro inesperado no nosso servidor.
          headers: {x-bkly-correlation-id: {description: "id de correlação da operação requisitada.", schema: {type: string}}}
          content: {application/json: {schema: {$ref: "#/components/schemas/ErrorResponse"}}}
        '503':
          $ref: "http://localhost:3320/commons/components#/components/responses/503"


security:
  - Bearer: []

components: 

  parameters:

    IncludeBalance:
      name: includeBalance
      in: query
      description: Inclua o saldo da conta na pesquisa.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false

    PocketNumber:
      name: pocketNumber
      in: path
      required: true
      schema: 
        type: string
        description: Número da conta pocket.
        nullable: true
  
  schemas:
    
    CreatePocketRequest:
      required:
      - currency
      - label
      - useCase
      type: object
      properties:
        currency:
          minLength: 1
          type: string
          description: "Sigla da moeda utilizada, de acordo com a ISO 4217."
        label:
          minLength: 1
          type: string
          description: "Label para criação da conta pocket."
        useCase:
          description: "Especificação da finalidade da pocket."
          $ref: "#/components/schemas/UseCase"
        beneficiary:
          $ref: "#/components/schemas/Beneficiary"
      additionalProperties: false
    
    UseCase:
      minLength: 1
      enum:
      - CORPORATE_EXPENSES
      - ACCOUNT_FOR_UNDER_AGE
      - FLEXIBLE_BENEFITS
      - BALANCE_SEGREGATION
      type: string
   
    CreatePocketRequestRequest:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/CreatePocketRequest"
        metadata:
          type: object
          additionalProperties: {type: object, additionalProperties: false}
          nullable: true
      additionalProperties: false
    
    CreatePocketResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PocketBasicResponseDto"
        links:
          type: array
          items: {$ref: "#/components/schemas/Link"}
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties: {type: object, additionalProperties: false}
          nullable: true
      additionalProperties: false

    Status: 
      type: string
      description: Situação da conta Pocket. Em caso de criação, o status será sempre APPROVED.
      nullable: true
      enum:
      - APPROVED
      - ACTIVE
      - DORMANT
      - LOCKED
      - CLOSED
      - WRITTEN_OFF

    GetPocketNumberResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PocketBasicResponseDto"
        links:
          type: array
          items: {$ref: "#/components/schemas/Link"}
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties: {type: object, additionalProperties: false}
          nullable: true
      additionalProperties: false

    DocumentNumberType:
      enum:
      - CPF
      - CNPJ
      type: string
    
    Document:
      type: object
      properties:
        value:
          type: string
          description: Número do documento do beneficiário.
          nullable: true
        type:
          $ref: "#/components/schemas/DocumentNumberType"
      additionalProperties: false

    Beneficiary:
      required:
      - age
      - document
      - name
      type: object
      properties:
        name:
          minLength: 1
          description: Nome do beneficiário.
          type: string
        document:
          $ref: "#/components/schemas/Document"
        age:
          minLength: 1
          type: integer
          description: Idade do beneficiário.
          format: int32
      additionalProperties: false
    
    PocketTransactionRequest:
      type: object
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
      additionalProperties: false

    PocketTransactionRequestRequest:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PocketTransactionRequest"
        metadata:
          type: object
          additionalProperties: {type: object, additionalProperties: false}
          nullable: true
      additionalProperties: false

    GetPocketByAccountNumberResponse:
      type: object
      properties:
        data:
          type: array
          items: {$ref: "#/components/schemas/PocketBasicResponseDto"}
          nullable: true
          readOnly: true
        links:
          type: array
          items: {$ref: "#/components/schemas/Link"}
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties: {type: object, additionalProperties: false}
          nullable: true
      additionalProperties: false

    GetPocketBalanceResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/BalanceMap"
        links:
          type: array
          items: {$ref: "#/components/schemas/Link"}
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties: {type: object, additionalProperties: false}
          nullable: true
      additionalProperties: false

    IAmount:
      type: object
      properties:
        value:
          type: number
          format: double
          description: Valor da moeda.
          readOnly: true
        currency:
          type: string
          description: Sigla da moeda utilizada, de acordo com a ISO 4217.
      additionalProperties: false
    
    BalanceMap:
      type: object
      properties:
        total:
          $ref: "#/components/schemas/IAmount"
        available:
          $ref: "#/components/schemas/IAmount"
        hold:
          $ref: "#/components/schemas/IAmount"
        remaining:
          $ref: "#/components/schemas/IAmount"
      additionalProperties: false

    AccountRequest:
      type: object
      properties:
        branch:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
      additionalProperties: false

    Amount:
      required:
      - currency
      - value
      type: object
      properties:
        currency:
          minLength: 1
          type: string
        value:
          minimum: 0
          exclusiveMinimum: true
          minLength: 1
          type: number
          format: double
      additionalProperties: false

    PocketBasicResponseDto:
      type: object
      properties:
        label:
          type: string
          description: Nome da pocket criada.
          nullable: true
        type:
          type: string
          description: Tipo da conta e sigla da moeda utilizada.
          nullable: true
        number:
          type: string
          description: Número da conta pocket.
          nullable: true
        currency:
          type: string
          description: Sigla da moeda utilizada, de acordo com a ISO 4217.
          nullable: true
        status:
          $ref: "#/components/schemas/Status"
        createdAt:
          type: string
          description: Data de criação da pocket.
          format: date-time
        updatedAt:
          type: string
          description: Data da última atualização do status de criação.
          format: date-time
      additionalProperties: false

    Link:
      type: object
      properties:
        url:
          type: string
          nullable: true
        rel:
          type: string
          nullable: true
        method:
          type: string
          nullable: true
      additionalProperties: false

    ClosureReason:
      enum:
      - HOLDER_REQUEST
      - COMMERCIAL_DISAGREEMENT
      type: string
      description: "Motivo da solicitação de cancelamento. Neste momento só é permitido HOLDER_REQUEST e COMMERCIAL_DISAGREEMENT"

    PocketAccountClosureRequest:
      type: object
      properties:
        reason:
          $ref: "#/components/schemas/ClosureReason"
      additionalProperties: false

    PocketAccountClosureRequestRequest:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PocketAccountClosureRequest"
        metadata:
          type: object
          additionalProperties: {type: object, additionalProperties: false}
          nullable: true
      additionalProperties: false


    Error:
      $ref: http://localhost:3320/commons/components#/components/schemas/ErrorResponse
    
    ErrorResponse:
      $ref: http://localhost:3320/commons/components#/components/schemas/Error
    
    Balance:
      description: Saldo da conta.
      type: object
      properties:
        amount:
          description: |
            Valor em decimal. Ex: 1.00.
          type: number
          format: double
        currency:
          description: |
            Moeda corrente. _Default: *BRL*_
          type: string
      additionalProperties: false

    SummarizedBalance:
      description: Saldo sumarizado da conta.
      type: object
      properties:
        inProcess:
          description: Saldo em processamento _(cash in)_.
          $ref: '#/components/schemas/Balance'
        available:
          description: Saldo disponível.
          $ref: '#/components/schemas/Balance'
        blocked:
          description: Saldo em bloqueio judicial.
          $ref: '#/components/schemas/Balance'
      additionalProperties: false

    AccountStatus:
      type: string
      description: |
        Status da conta.
        _(ACTIVE, CLOSED)_
      enum:
        - ACTIVE
        - CLOSED

    AccountType:
      type: string
      description: |
        Tipo da conta a ser criada. 
        _Default: **PAYMENT_ACCOUNT**_.
      default: PAYMENT_ACCOUNT
      enum:
        - PAYMENT_ACCOUNT

    CreateAccountRequest:
      type: object
      properties:
        accountType:
          $ref: '#/components/schemas/AccountType'
      additionalProperties: false
    
    Account:
      type: object
      properties:
        branch:
          type: string
          nullable: true
          description: Número da agência bancária.
        number:
          type: string
          nullable: true
          description: Número da conta.
      additionalProperties: false

    Income:
      type: object
      properties:
        amount:
          type: number
          format: double
        currency:
          type: string
          nullable: true
      additionalProperties: false

    IncomeBalance:
      type: object
      properties:
        year:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        currency:
          type: string
          nullable: true
      additionalProperties: false

    Holder:
      type: object
      properties:
        name:
          type: string
          nullable: true
        documentNumber:
          type: string
          nullable: true
      additionalProperties: false
    
    AccountBasicResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/AccountStatus'
        branch:
          $ref: 'http://localhost:3320/commons/components#/components/schemas/BankBranch'
        number:
          $ref: 'http://localhost:3320/commons/components#/components/schemas/AccountNumber'
      additionalProperties: false

    AccountDetailedResponse:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/SummarizedBalance'
        status:
          $ref: '#/components/schemas/AccountStatus'
        branch:
          $ref: 'http://localhost:3320/commons/components#/components/schemas/BankBranch'
        number:
          $ref: 'http://localhost:3320/commons/components#/components/schemas/AccountNumber'
      additionalProperties: false

    ReasonType:
      type: string
      description: |
        Motivo do encerramento. 
        _Default: **HOLDER_REQUEST**_.
      default: HOLDER_REQUEST
      enum:
        - HOLDER_REQUEST
        - COMMERCIAL_DISAGREEMENT
        
    ClosureRequest:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/ReasonType'
      additionalProperties: false 

  examples:

    accountBasicExample:
      value:
        branch: '0001'  
        number: '123456'
        status: 'ACTIVE'
      summary: Conta de pagamento sem saldo

    accountDetailedExample:
      value:
        branch: '0001'  
        number: '123456'
        status: 'ACTIVE'
        balance: 
          available:
              amount: 0.00
              currency: 'BRL'
          inProcess:
              amount: 0.00
              currency: 'BRL'
          blocked:
              amount: 0.00
              currency: 'BRL'  
      summary: Conta de pagamento com saldo
      
    listOfAccounts:
      value:
        - number: '123456'
          branch: '0001'  
          status: 'ACTIVE'
        - number: '123'
          branch: '0001'  
          status: 'CLOSED'
      summary: Lista de contas de pagamento

  securitySchemes:
    Bearer:
      type: http
      description: Inclua um token de autorização do tipo Bearer.
      scheme: bearer
      bearerFormat: JWT
      
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
  samples-languages:
    - curl
