openapi: 3.0.1
info:
	title: 'Gestão de Conta'
	description: 'Abra e gerencie contas para o seu cliente em poucos minutos. Consulte também nossa [documentação](https://bankly.readme.io/v1.0/docs/) para mais detalhes sobre os fluxos de negócio.'
	version: '2.0'
paths:
	/accounts/{accountNumber}/pockets
  	post:
			tags:
					- 'Abertura de Conta Pocket.'
			summary: 'Crie uma conta pocket.'
			description: 'IMPORTANTE! É necessário ter uma conta de pagamento ativa.'
			operationId: CreatePocketAsync
			parameters:
			- name: accountNumber
				in: path
				required: true
				schema: {type: string, nullable: true}
			- name: api-version
				in: header
				description: 'Versão da API. Atualmente estamos na 1.0.'
				required: true
				schema: {type: string}
			- name: x-idempotency-key
				in: header
				description: 'Chave de Idempotência'
				schema: {type: string, description: 'Informe um GUID v4'}
            requestBody:
                content:
                    application/json: {schema: {$ref: '#/components/schemas/CreatePocketRequestRequest'}}
            responses:
                '201':
                    description: 'Recurso criado com sucesso'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}, Location: {description: 'Localização do recurso recém-criado ou em análise.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/CreatePocketResponse'}}}
                '400':
                    description: 'Há algum problema com a sua requisição.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '500':
                    description: 'Ocorreu algum erro inesperado no nosso servidor.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
            security:
                -
                    Bearer: []
        get:
            tags:
                - 'Abertura de Conta Pocket.'
            summary: 'Obtenha dados das contas pockets.'
            description: 'Retornaremos uma lista com todas as contas pockets associadas a conta de pagamento solicitada. Opcionalmente, é possivel filtrar pelo status e pelo tipo da conta pocket.'
            operationId: GetPocketsByAccountNumberAsync
            parameters:
                -
                    name: accountNumber
                    in: path
                    description: 'Número da conta regular.'
                    required: true
                    schema: {type: string, description: 'Número da conta regular.', nullable: true}
                -
                    name: pocketType
                    in: query
                    description: 'Tipo da Pocket, exemplo: Pocket_BRL.'
                    schema: {type: string, description: 'Tipo da Pocket, exemplo: Pocket_BRL.', nullable: true}
                -
                    name: status
                    in: query
                    description: 'Status da conta Pocket.'
                    schema: {type: string, description: 'Status da conta Pocket.', nullable: true}
                -
                    name: size
                    in: query
                    description: 'Quantidade de itens a serem retornado na paginação.'
                    schema: {type: integer, description: 'Quantidade de itens a serem retornado na paginação.', format: int32}
                -
                    name: page
                    in: query
                    description: 'Pagina a ser retornada.'
                    schema: {type: integer, description: 'Pagina a ser retornada.', format: int32}
                -
                    name: branch
                    in: query
                    description: 'Agência da conta regular, o default é a agência 0001.'
                    schema: {type: string, description: 'Agência da conta regular, o default é a agência 0001.', nullable: true}
                -
                    name: api-version
                    in: header
                    description: 'Versão da API. Atualmente estamos na 1.0.'
                    required: true
                    schema: {type: string}
            responses:
                '200':
                    description: 'Recurso encontrado'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/GetPocketByAccountNumberResponse'}}}
                '404':
                    description: 'Recurso não encontrado.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '500':
                    description: 'Ocorreu algum erro inesperado no nosso servidor.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
            security:
                -
                    Bearer: []
    '/api/pockets/{pocketNumber}':
        get:
            tags:
                - 'Abertura de Conta Pocket.'
            summary: 'Obtenha dados da conta pocket.'
            description: 'Retornaremos os dados da conta pocket.'
            operationId: GetPocketAsync
            parameters:
                -
                    name: pocketNumber
                    in: path
                    required: true
                    schema: {type: string, nullable: true}
                -
                    name: api-version
                    in: header
                    description: 'Versão da API. Atualmente estamos na 1.0.'
                    required: true
                    schema: {type: string}
            responses:
                '200':
                    description: 'Recurso encontrado'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/GetPocketNumberResponse'}}}
                '404':
                    description: 'Recurso não encontrado.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '500':
                    description: 'Ocorreu algum erro inesperado no nosso servidor.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
            security:
                -
                    Bearer: []
    '/api/pockets/{pocketNumber}/balance':
        get:
            tags:
                - 'Abertura de Conta Pocket.'
            summary: 'Obtenha o saldo da conta pocket.'
            description: 'Retornaremos o saldo disponível, bloqueado, em processamento e o total. '
            operationId: GetPocketBalanceAsync
            parameters:
                -
                    name: pocketNumber
                    in: path
                    required: true
                    schema: {type: string, nullable: true}
                -
                    name: api-version
                    in: header
                    description: 'Versão da API. Atualmente estamos na 1.0.'
                    required: true
                    schema: {type: string}
            responses:
                '200':
                    description: 'Recurso encontrado'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/GetPocketBalanceResponse'}}}
                '404':
                    description: 'Recurso não encontrado.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '500':
                    description: 'Ocorreu algum erro inesperado no nosso servidor.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
            security:
                -
                    Bearer: []
    '/api/pockets/{pocketNumber}/closure':
        patch:
            tags:
                - 'Abertura de Conta Pocket.'
            summary: 'Encerramento da conta pocket.'
            description: 'Solicite o encerramento da conta pocket.'
            operationId: ClosePocketAccountAsync
            parameters:
                -
                    name: pocketNumber
                    in: path
                    required: true
                    schema: {type: string, nullable: true}
                -
                    name: api-version
                    in: header
                    description: 'Versão da API. Atualmente estamos na 1.0.'
                    required: true
                    schema: {type: string}
            requestBody:
                content:
                    application/json: {schema: {$ref: '#/components/schemas/PocketAccountClosureRequestRequest'}}
            responses:
                '202':
                    description: 'Recurso encontrado'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}, Location: {description: 'Localização do recurso recém-criado ou em análise.', schema: {type: string}}}
                '404':
                    description: 'Recurso não encontrado.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '422':
                    description: 'A requisição não pode ser processada, devido a uma regra de negócio.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '500':
                    description: 'Ocorreu algum erro inesperado no nosso servidor.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
            security:
                -
                    Bearer: []
    '/api/pockets/{pocketAccountNumber}/transactions/withdrawals':
        post:
            tags:
                - 'Abertura de Conta Pocket.'
            summary: 'Faça o resgate de um valor da conta pocket para conta de pagamento.'
            description: 'IMPORTANTE! É necessário ter uma conta de pagamento ativa.'
            operationId: CreateWithdrawalTransactionAsync
            parameters:
                -
                    name: pocketAccountNumber
                    in: path
                    required: true
                    schema: {type: string, nullable: true}
                -
                    name: api-version
                    in: header
                    description: 'Versão da API. Atualmente estamos na 1.0.'
                    required: true
                    schema: {type: string}
                -
                    name: x-idempotency-key
                    in: header
                    description: 'Chave de Idempotência'
                    schema: {type: string, description: 'Informe um GUID v4'}
            requestBody:
                content:
                    application/json: {schema: {$ref: '#/components/schemas/PocketTransactionRequestRequest'}}
            responses:
                '202':
                    description: 'Requisição foi aceita e está sendo processada'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}, Location: {description: 'Localização do recurso recém-criado ou em análise.', schema: {type: string}}}
                '400':
                    description: 'Há algum problema com a sua requisição.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '404':
                    description: 'Recurso não encontrado.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '500':
                    description: 'Ocorreu algum erro inesperado no nosso servidor.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
            security:
                -
                    Bearer: []
    '/api/pockets/{pocketAccountNumber}/transactions/deposits':
        post:
            tags:
                - 'Abertura de Conta Pocket.'
            summary: 'Faça um depósito para a conta pocket.'
            description: 'IMPORTANTE! É necessário ter uma conta de pagamento ativa.'
            operationId: CreateDepositTransactionAsync
            parameters:
                -
                    name: pocketAccountNumber
                    in: path
                    required: true
                    schema: {type: string, nullable: true}
                -
                    name: api-version
                    in: header
                    description: 'Versão da API. Atualmente estamos na 1.0.'
                    required: true
                    schema: {type: string}
                -
                    name: x-idempotency-key
                    in: header
                    description: 'Chave de Idempotência'
                    schema: {type: string, description: 'Informe um GUID v4'}
            requestBody:
                content:
                    application/json: {schema: {$ref: '#/components/schemas/PocketTransactionRequestRequest'}}
            responses:
                '202':
                    description: 'Requisição foi aceita e está sendo processada'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}, Location: {description: 'Localização do recurso recém-criado ou em análise.', schema: {type: string}}}
                '400':
                    description: 'Há algum problema com a sua requisição.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '404':
                    description: 'Recurso não encontrado.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
                '500':
                    description: 'Ocorreu algum erro inesperado no nosso servidor.'
                    headers: {x-bkly-correlation-id: {description: 'Id correlação da operação requisitada.', schema: {type: string}}}
                    content: {application/json: {schema: {$ref: '#/components/schemas/ErrorResponse'}}}
            security:
                -
                    Bearer: []
components:
    schemas:
        DocumentNumberType:
            enum:
                - CPF
                - CNPJ
            type: string
        Document:
            type: object
            properties:
                value:
                    type: string
                    nullable: true
                type:
                    $ref: '#/components/schemas/DocumentNumberType'
            additionalProperties: false
        Beneficiary:
            required:
                - age
                - document
                - name
            type: object
            properties:
                name:
                    minLength: 1
                    type: string
                document:
                    $ref: '#/components/schemas/Document'
                age:
                    minLength: 1
                    type: integer
                    format: int32
            additionalProperties: false
        CreatePocketRequest:
            required:
                - currency
                - label
                - useCase
            type: object
            properties:
                currency:
                    minLength: 1
                    type: string
                    description: 'Moeda para criação da pocket account.'
                label:
                    minLength: 1
                    type: string
                    description: 'Label para criação da pocket account.'
                useCase:
                    minLength: 1
                    type: string
                    description: 'Caso de uso da pocket, por exemplo CORPORATE_EXPENSES'
                beneficiary:
                    $ref: '#/components/schemas/Beneficiary'
                accountNumber:
                    type: string
                    description: 'Número da conta do cliente.'
                    nullable: true
                    readOnly: true
            additionalProperties: false
        CreatePocketRequestRequest:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/CreatePocketRequest'
                meta:
                    type: object
                    additionalProperties: {type: object, additionalProperties: false}
                    nullable: true
            additionalProperties: false
        PocketBasicResponseDto:
            type: object
            properties:
                label:
                    type: string
                    nullable: true
                type:
                    type: string
                    nullable: true
                number:
                    type: string
                    nullable: true
                currency:
                    type: string
                    nullable: true
                status:
                    type: string
                    nullable: true
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
            additionalProperties: false
        Link:
            type: object
            properties:
                url:
                    type: string
                    nullable: true
                rel:
                    type: string
                    nullable: true
                method:
                    type: string
                    nullable: true
            additionalProperties: false
        CreatePocketResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/PocketBasicResponseDto'
                links:
                    type: array
                    items: {$ref: '#/components/schemas/Link'}
                    nullable: true
                    readOnly: true
                meta:
                    type: object
                    additionalProperties: {type: object, additionalProperties: false}
                    nullable: true
            additionalProperties: false
        Error:
            type: object
            properties:
                code:
                    type: string
                    nullable: true
                propertyName:
                    type: string
                    nullable: true
                messages:
                    type: array
                    items: {type: string}
                    nullable: true
            additionalProperties: false
        ErrorResponse:
            type: object
            properties:
                errors:
                    type: array
                    items: {$ref: '#/components/schemas/Error'}
                    nullable: true
                reference:
                    type: integer
                    format: int32
            additionalProperties: false
        GetPocketByAccountNumberResponse:
					type: object
					properties:
						data:
							type: array
							items: {$ref: '#/components/schemas/PocketBasicResponseDto'}
							nullable: true
							readOnly: true
						links:
							type: array
							items: {$ref: '#/components/schemas/Link'}
							nullable: true
							readOnly: true
						meta:
							type: object
							additionalProperties: {type: object, additionalProperties: false}
							nullable: true
					additionalProperties: false
        GetPocketNumberResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/PocketBasicResponseDto'
                links:
                    type: array
                    items: {$ref: '#/components/schemas/Link'}
                    nullable: true
                    readOnly: true
                meta:
                    type: object
                    additionalProperties: {type: object, additionalProperties: false}
                    nullable: true
            additionalProperties: false
        ICurrency:
            type: object
            properties:
                code:
                    type: string
                    nullable: true
                    readOnly: true
                number:
                    type: integer
                    format: int32
                    nullable: true
                    readOnly: true
            additionalProperties: false
        IAmount:
            type: object
            properties:
                value:
                    type: number
                    format: double
                    readOnly: true
                currency:
                    $ref: '#/components/schemas/ICurrency'
            additionalProperties: false
        BalanceMap:
            type: object
            properties:
                total:
                    $ref: '#/components/schemas/IAmount'
                available:
                    $ref: '#/components/schemas/IAmount'
                hold:
                    $ref: '#/components/schemas/IAmount'
                blocked:
                    $ref: '#/components/schemas/IAmount'
            additionalProperties: false
        GetPocketBalanceResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/BalanceMap'
                links:
                    type: array
                    items: {$ref: '#/components/schemas/Link'}
                    nullable: true
                    readOnly: true
                meta:
                    type: object
                    additionalProperties: {type: object, additionalProperties: false}
                    nullable: true
            additionalProperties: false
        ClosureReason:
            enum:
                - HOLDER_REQUEST
                - COMMERCIAL_DISAGREEMENT
            type: string
            description: 'Motivo da solicitação de cancelamento. Neste momento só é permitido HOLDER_REQUEST e COMMERCIAL_DISAGREEMENT'
        PocketAccountClosureRequest:
            type: object
            properties:
                reason:
                    $ref: '#/components/schemas/ClosureReason'
                pocketNumber:
                    type: string
                    nullable: true
                    readOnly: true
            additionalProperties: false
        PocketAccountClosureRequestRequest:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/PocketAccountClosureRequest'
                meta:
                    type: object
                    additionalProperties: {type: object, additionalProperties: false}
                    nullable: true
            additionalProperties: false
        Amount:
            required:
                - currency
                - value
            type: object
            properties:
                currency:
                    minLength: 1
                    type: string
                value:
                    minimum: 0
                    exclusiveMinimum: true
                    minLength: 1
                    type: number
                    format: double
            additionalProperties: false
        PocketTransactionRequest:
            type: object
            properties:
                amount:
                    $ref: '#/components/schemas/Amount'
            additionalProperties: false
        PocketTransactionRequestRequest:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/PocketTransactionRequest'
                meta:
                    type: object
                    additionalProperties: {type: object, additionalProperties: false}
                    nullable: true
            additionalProperties: false
    securitySchemes:
        Bearer:
            type: http
            description: 'Inclua o token de autorização do tipo Bearer'
            scheme: bearer
            bearerFormat: JWT
x-explorer-enabled: true
x-samples-enabled: true
x-samples-languages:
    - csharp
    - javascript
    - node
    - go
    - java
    - kotlin
    - php
    - python
    - ruby
    - swift
    - cplusplus
    - powershell
    - curl
