openapi: 3.0.0
paths:
  /crypto/orders:
    post:
      tags:
        - Operações com criptomoedas  
      summary: Criação de ordem de compra e venda de criptomoedas
      description: |
        <div class="bkly-ref-description">
          <p>Crie uma ordem de compra ou venda de criptomoedas.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span>
          <span class="bkly-ref-scope-tag">scope: crypto.create</span>
        </div>
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion2'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/X-Correlation-Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderIntentionBodyDto"
      responses: 
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderIntentionResponseDto"

  /crypto/orders/{order_authentication_code}:
    post:
      tags:
        - Operações com criptomoedas  
      summary: Execução de ordem de compra e venda de criptomoedas 
      description: |
        <div class="bkly-ref-description">
          <p>Realize a execução da ordem de compra ou venda de criptomoedas para efetivar uma dessas operações.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span>
          <span class="bkly-ref-scope-tag">scope: crypto.create</span>
        </div>
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion2'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/X-Correlation-Id'
        - name: order_authentication_code
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderExecutionBodyDto"
      responses: 
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderExecutionResponseDto"
     
  /crypto/prices:
    get:
      tags:
        - Operações com criptomoedas 
      summary: Cotação de criptomoedas
      description: |
        <div class="bkly-ref-description">
          <p>Realize a cotação do valor para compra e venda de criptomoeda.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span>
           <span class="bkly-ref-scope-tag">scope: crypto.read</span>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Atualmente, só é possível operar com bitcoins (BTC)."
        }
        [/block]
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion2'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/X-Correlation-Id'
        - $ref: '#/components/parameters/Market'
      responses: 
        "200":
          description: "Recurso encontrado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceResponseDto"
  /crypto/graphs/prices:
    get:
      tags:
        - Operações com criptomoedas  
      summary: Gráfico da cotação de criptomoedas por período
      description: |
        <div class="bkly-ref-description">
          <p>Realize a cotação de criptomoedas de um período específico.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span>
          <span class="bkly-ref-scope-tag">scope: crypto.read</span>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Atualmente, só é possível operar com bitcoins (BTC)."
        }
        [/block]
      parameters:
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/ApiVersion2'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/Authorization'
        - $ref: 'http://localhost:3320/commons/components#/components/parameters/X-Correlation-Id'
        - $ref: '#/components/parameters/Market'
        - $ref: '#/components/parameters/Period'
      responses: 
        "200":
          description: "Recurso encontrado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GraphResponseDto"

info:
  title: Entrypoint v2 Documentation
  description: See all entrypoint v2 endpoints by this documentation
  version: 2.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  
  parameters:
    Market:
      name: market
      required: true
      in: query
      # TODO: Validar esta descrição
      description: "Informe o código da criptomoeda a ser consultada. Esse campo é <i>case sensitive</i> e o valor deve ser informado em letras maiúsculas. Exemplo: BTC para bitcoin."
      schema:
        enum:
          - BTC:BRL
        type: string
    
    Period:
      name: period
      in: query
      description: Informe o período que deseja exibir. Esse campo é <i>case sensitive</i> e o valor deve ser informado em letras maiúsculas.
      required: true
      schema: 
        enum:
          - Daily
          - Weekly
          - Monthly
          - Annually
        type: string
  
  schemas:
    PocketValueObject:
      type: object
      properties:
        number:
          type: string
          example: "22651349000001"
          # TODO: é isso mesmo?
          description: Número da conta de pagamento do cliente.
      required:
        - number
    OrderIntentionBodyDataDto:
      type: object
      properties:
        pocket:
          $ref: "#/components/schemas/PocketValueObject"
        market:
          type: string
          example: BTC:BRL
        type:
          type: string
          description: Tipo de ordem (compra ou venda).
          enum:
            - PURCHASE
            - SELL
      required:
        - pocket
        - market
        - type
    OrderIntentionBodyDto:
      type: object
      properties:
        data:
          description: Objeto que contém informações sobre a criação de ordem de compra e venda de criptomoedas.
          $ref: "#/components/schemas/OrderIntentionBodyDataDto"
        metadata:
          type: object
      required:
        - data
        - metadata

    AccountValueObject:
      type: object
      properties:
        branch:
          type: string
          example: "0001"
        number:
          type: string
          example: "226513"
      required:
        - branch
        - number
    PocketDto:
      type: object
      properties:
        number:
          type: string
          example: "22651349000001"
          description: Número da conta de pagamento do cliente.
        account:
          $ref: "#/components/schemas/AccountValueObject"
      required:
        - number
        - account

    PriceValueObject:
      type: object
      properties:
        value:
          type: number
          nullable: true
          description: Preço final da criptomoeda.
        currency:
          type: string
          nullable: true
          description: Código da criptomoeda.
      required:
        - value
        - currency
      additionalProperties: false

    LimitValueObject:
      type: object
      properties:
        min:
          type: number
          example: "1.0"
        max:
          type: number
          example: "50000.00"
      required:
        - min
        - max
    LimitOrderDto:
      type: object
      properties:
        purchase:
          $ref: "#/components/schemas/LimitValueObject"
        sell:
          $ref: "#/components/schemas/LimitValueObject"
      required:
        - purchase
        - sell

    OrderIntentionDto:
      type: object
      properties:
        authenticationCode:
          type: string
          description: Identificador da transação informado no campo <code>orderId</code>.
          example: 60c66bce-0127-4e07-a35d-d14d31e4126a
        type:
          type: string
          description: Tipo de ordem (compra ou venda).
          enum:
            - PURCHASE
            - SELL
        pocket:
          $ref: "#/components/schemas/PocketDto"
        price:
          description: Objeto contendo informações sobre o preço da criptomoeda.
          $ref: "#/components/schemas/PriceValueObject"
        status:
          type: string
          description: Situação da ordem de execução de compra ou venda.
          enum:
            - CREATED
            - EXECUTED
            - CANCELED
            - EXPIRED
            - IN_PROCESS
            - ERROR
        createdAt:
          format: date-time
          type: string
          description: "Data de criação da execução da ordem de compra ou venda (formato: YYYY-MM-DDTHH:mm:SS.MMMZ)."
        expiresIn:
          format: date-time
          type: string
          description: "Data de expiração da execução da ordem (formato: YYYY-MM-DDTHH:mm:SS.MMMZ)."
        limits:
          $ref: "#/components/schemas/LimitOrderDto"
      required:
        - authenticationCode
        - type
        - pocket
        - price
        - status
        - createdAt
        - expiresIn
        - limits

    LinkValueObject:
      type: object
      properties:
        url:
          type: string
          example: cryptos/orders/{{authentication_code}}
        rel:
          type: string
          example: execute_order
        method:
          type: string
          example: POST
      required:
        - url
        - rel
        - method
    
    # TODO: Descrever objeto
    OrderIntentionResponseDto:
      type: object
      properties:
        data:
          description: Objeto que contém informações sobre a criação de ordem de compra e venda de criptomoedas.
          $ref: "#/components/schemas/OrderIntentionDto"
        metadata:
          type: object
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinkValueObject"
      required:
        - data
        - metadata
        - links

    AmountValueObject:
      type: object
      properties:
        value:
          type: number
          description: Valor de compra ou venda das criptomoedas sem taxa.
        currency:
          type: string
          # TODO: Qual moeda?
          description: Moeda XXXX.
      required:
        - value
        - currency

    # TODO: Preencher objeto?
    FeeValueObject:
      type: object
      properties:
        value:
          type: number
        currency:
          type: string
        priority:
          type: boolean
      required:
        - value
        - currency
        - priority

    DataOrderExecutionDto:
      type: object
      properties:
        amount:
          description: Valor de compra ou venda das criptomoedas sem taxa.
          $ref: "#/components/schemas/AmountValueObject"
        fee:
          $ref: "#/components/schemas/FeeValueObject"
      required:
        - amount
        - fee

    OrderExecutionBodyDto:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/DataOrderExecutionDto"
        metadata:
          type: object
      required:
        - data
        - metadata

    QuoteValueObject:
      type: object
      properties:
        value:
          type: number
        currency:
          type: string
      required:
        - value
        - currency

    OrderExecutionDto:
      type: object
      properties:
        authenticationCode:
          type: string
          example: 60c66bce-0127-4e07-a35d-d14d31e4126a
        type:
          type: string
          enum:
            - PURCHASE
            - SELL
        market:
          type: string
          example: BTC:BRL
        status:
          type: string
          enum:
            - CREATED
            - EXECUTED
            - CANCELED
            - EXPIRED
            - IN_PROCESS
            - ERROR
        pocket:
          $ref: "#/components/schemas/PocketDto"
        price:
          $ref: "#/components/schemas/PriceValueObject"
        amount:
          $ref: "#/components/schemas/AmountValueObject"
        fee:
          $ref: "#/components/schemas/FeeValueObject"
        quote:
          $ref: "#/components/schemas/QuoteValueObject"
        createdAt:
          format: date-time
          type: string
        expiresIn:
          format: date-time
          type: string
        limits:
          $ref: "#/components/schemas/LimitOrderDto"
      required:
        - authenticationCode
        - type
        - market
        - status
        - pocket
        - price
        - amount
        - fee
        - quote
        - createdAt
        - expiresIn
        - limits
    OrderExecutionResponseDto:
      type: object
      properties:
        data:
          description: Objeto que contém informações sobre a execução de ordem de compra e venda de criptomoedas.
          $ref: "#/components/schemas/OrderExecutionDto"
        metadata:
          type: object
        links:
          type: array
          items:
            $ref: "#/components/schemas/LinkValueObject"
      required:
        - data
        - metadata
        - links

    # TODO: Completar este objeto
    PriceDto:
      type: object
      properties:
        market:
          type: string
          enum:
            - BTC:BRL
        ask:
          $ref: "#/components/schemas/PriceValueObject"
        bid:
          $ref: "#/components/schemas/PriceValueObject"
        timestamp:
          type: string
      required:
        - market
        - ask
        - bid
        - timestamp

    # TODO: Completar este objeto
    PriceResponseDto:
      type: object
      properties:
        data:
          description: Objeto que contém informações sobre a cotação de criptomoedas.
          $ref: "#/components/schemas/PriceDto"
      required:
        - data

    GraphPointValueObject:
      type: object
      properties:
        price:
          $ref: "#/components/schemas/PriceValueObject"
          description: Preço da criptomoeda.
        timestamp:
          type: string
          nullable: true
          # TODO: Validar a descrição
          description: "Data de criação da consulta (formato: YYYY-MM-DDTHH:mm:SS.MMMZ)."
      required:
        - price
        - timestamp

    # TODO: Criar este objeto
    GraphDto:
      type: object
      properties:
        # TODO: Criar o mesmo objeto utilizado em parameters/Market
        market:
          type: string
          enum:
            - BTC:BRL
        points:
          type: array
          items:
            $ref: "#/components/schemas/GraphPointValueObject"
      required:
        - market
        - points
    
    # TODO: Preencher esse objeto
    GraphResponseDto:
      type: object
      properties:
        data:
          description: Objeto que contém informações sobre o gráfico da cotação de criptomoedas por período.
          $ref: "#/components/schemas/GraphDto"
      required:
        - data

externalDocs:
  description: View swagger schema
  url: /swagger-json
